name: Django apps

on: [push]

jobs:
  init-empty-python-version-artifact:
    name: Init python-version artifact with empty file
    runs-on: ubuntu-latest
    steps:
    - shell: bash
      run: |
        touch python-version.txt
    - name: upload list of python version to artifact
      uses: actions/upload-artifact@v2
      with:
        name: python-version
        path: python-version.txt
  get-python-version:
    name: Get list of Python version as artifact
    needs: init-empty-python-version-artifact
    runs-on: ubuntu-latest
    strategy:
      matrix:
          python-version: [3.6, 3.7, 3.8]
    steps:
    - name: download list of python version from artifact
      uses: actions/download-artifact@v2
      with:
        name: python-version
    - shell: bash
      run: |
        echo ${{ matrix.python-version }} >> python-version.txt
        cat python-version.txt
    - name: upload list of python version to artifact
      uses: actions/upload-artifact@v2
      with:
        name: python-version
        path: python-version.txt
  get-django-version:
    name: Get list of Django version as artifact
    runs-on: ubuntu-latest
    steps:
    - shell: bash
      run: |
        echo "2.2" > django-version.txt
        echo "3.0.0" >> django-version.txt
        echo "3.1" >> django-version.txt
    - name: upload list of django version to artifact
      uses: actions/upload-artifact@v2
      with:
        name: django-version
        path: django-version.txt
  generate-matrix:
    name: Generate matrix for build
    needs: [get-python-version, get-django-version]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - name: Get Django Apps
      id: get-apps
      run: |
        # invoked by push
        git fetch origin ${{ github.event.before }} --depth=1
        APPS=$(ls)
        echo "$APPS"
        for name in `ls`; do if [ $name != "README.md" ] && [ $name != "LICENSE" ]; then echo $name >> django-app.txt; fi done
    - uses: actions/download-artifact@v2
      with:
        name: python-version
    - uses: actions/download-artifact@v2
      with:
        name: django-version
    - name: Set matrix for build
      id: set-matrix
      run: |
        echo "set-matrix"
        PYVERS=`cat python-version.txt`
        echo $PYVERS
        DJVERS=`cat django-version.txt`
        echo $DJVERS
        DJAPPS=`cat django-app.txt`
        echo $DJAPPS
        for pyver in $PYVERS
        do
          echo $pyver
          for djver in $DJVERS
          do
            echo $djver
            for djapp in $DJAPPS
            do
              echo $djapp
            done
          done
        done
        JSON="{\"python-version\": 3.6, \"django-version\": 2.2, \"django-app\": \"halo\" }, "
        echo $JSON
        # set output
        echo "::set-output name=matrix::$( echo "$JSON" )"

  build:
    name: Build ${{ matrix.python-version }}/${{ matrix.django-version}}/${{ matrix.django-app }}
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        include:
          - python-version: 3.6
            django-version: 2.2
            django-app: halo
          - python-version: 3.7
            django-version: 2.2
            django-app: splitviewsmodels
          - python-version: 3.8
            django-version: 2.2
            django-app: profilpenggunafoto
          - python-version: 3.6
            django-version: 3.0.0
            django-app: halo
          - python-version: 3.7
            django-version: 3.0.0
            django-app: splitviewsmodels
          - python-version: 3.8
            django-version: 3.0.0
            django-app: profilpenggunafoto
          - python-version: 3.6
            django-version: 3.1
            django-app: halo
          - python-version: 3.7
            django-version: 3.1
            django-app: splitviewsmodels
          - python-version: 3.8
            django-version: 3.1
            django-app: profilpenggunafoto

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        echo ${{fromJson(needs.generate-matrix.outputs.matrix)}}
        python -m pip install --upgrade pip
        pip install Django~=${{ matrix.django-version }}
        pip install coverage
    - name: Install dependencies for Django App with ImageField
      if: matrix.django-app == 'profilpenggunafoto'
      run: |
        pip install Pillow        
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Setup Django Project
      run: |
        django-admin startproject jagodjango .
        python manage.py migrate
    - name: Setup Django Apps and Tests
      run: |
        echo ${{ matrix.django-app }}
        python manage.py makemigrations --settings=${{ matrix.django-app }}.settings_tests ${{ matrix.django-app }}
        python manage.py migrate --settings=${{ matrix.django-app }}.settings_tests ${{ matrix.django-app }}
        python manage.py test --settings=${{ matrix.django-app }}.settings_tests ${{ matrix.django-app }}
    - name: Test Coverage and Generate Report
      run: |
        echo ${{ matrix.django-app }}
        coverage run --source=${{ matrix.django-app }} manage.py test --settings=${{ matrix.django-app }}.settings_tests ${{ matrix.django-app }}
        coverage xml --omit=${{ matrix.django-app }}/admin.py,${{ matrix.django-app }}/*tests.py,${{ matrix.django-app }}/migrations/*.py
    - name: Codecov
      uses: codecov/codecov-action@v1.0.5
      with:
        # User defined upload name. Visible in Codecov UI
        name: ${{ matrix.python-version }}/${{ matrix.django-version }}/${{ matrix.django-app }}
        # Repository upload token - get it from codecov.io
        token: ${{ secrets.CODECOV_TOKEN }}
        # Path to coverage file to upload
        file: ./coverage.xml
